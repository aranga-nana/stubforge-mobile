name: Docker Multi-Platform Build

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g. 1.3.3) if manually triggering without git tag push'
        required: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version
        id: vars
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            TAG="${GITHUB_REF##*/}"
            VERSION="${TAG#v}"
          else
            VERSION="${{ github.event.inputs.version }}"
            if [ -z "$VERSION" ]; then
              echo "No version provided and not a tag push" >&2
              exit 1
            fi
            TAG="v$VERSION";
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Multi-Platform Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            aranga/stubforge-mobile:latest
            aranga/stubforge-mobile:${{ steps.vars.outputs.version }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ steps.vars.outputs.version }}
            org.opencontainers.image.title=StubForge Mobile
            org.opencontainers.image.description=Configurable stub server with built-in OAuth2 for mobile development

      - name: Summary
        run: |
          echo "Built and pushed multi-platform images for version ${{ steps.vars.outputs.version }}" >> $GITHUB_STEP_SUMMARY
